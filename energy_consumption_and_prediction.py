# -*- coding: utf-8 -*-
"""energy-consumption-and-prediction.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/gist/Tasleemfirdous/b8e702857e3903deffbfbed787845c93/energy-consumption-and-prediction.ipynb
"""

!gdown --fuzzy https://drive.google.com/file/d/1bvaXJJqNObOCkX-i475BNxpidk024pyx/view

import pandas as pd
import numpy as np

"""Observation:Here we have the Dataset i.e(household_power_consumption)...For this we have to PREDICT FUTURE VALUES ...for which the first step we have to perform the Data Exploration .....to understand the dataset...."""

df = pd.read_csv('/content/household_power_consumption.txt',sep=";")

"""Observation: Initially here we are using... df.head()... to display the first 5 rows of dataset.


"""

df.head()

"""Observation:Here we used df.info() to get the no.of columns and there Dtype to analyse the complete dataset ....


"""

df.info()

"""Observation:Now we are converting the Objects Dtype to Float Dtype of each column in the dataset.//errors=coerce (non convertible values)..




"""

df['Global_active_power']=pd.to_numeric(df['Global_active_power'],errors='coerce')
df['Global_reactive_power']=pd.to_numeric(df['Global_reactive_power'],errors='coerce')
df['Voltage']=pd.to_numeric(df['Voltage'],errors='coerce')
df['Global_intensity']=pd.to_numeric(df['Global_intensity'],errors='coerce')
df['Sub_metering_1']=pd.to_numeric(df['Sub_metering_1'],errors='coerce')
df['Sub_metering_2']=pd.to_numeric(df['Sub_metering_2'],errors='coerce')
df['Sub_metering_3']=pd.to_numeric(df['Sub_metering_3'],errors='coerce')
df.info()

"""Observation:Here we used df.shape to get the no.of rows and columns


"""

df.describe()

"""Observation:Here we used df[col_name].unique() which finds the unique values"""

df['Global_active_power'].unique()
df['Global_reactive_power'].unique()
df['Global_intensity'].unique()
df['Sub_metering_1'].unique()
df['Sub_metering_2'].unique()
df['Sub_metering_3'].unique()

"""Observation:Here we used df.isnull().sum() to check for the missing values"""

df.isnull().sum()

"""Observation:Here we used round() which rounds a number to specified number of decimal places"""

round(100 * df.Sub_metering_3.isnull().sum()/len(df),2)

"""Observation:Here we used median() on the column Sub_metering_3"""

df['Sub_metering_3'].median()

"""Observation:Here we use describe(include='object') will looks for the columns with object Dtype"""

df.describe(include='object')